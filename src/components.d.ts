/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { TreeMenuItem } from "./interfaces/menu-item.interface";
export namespace Components {
    interface MenuItem {
        "compactCheckbox": boolean;
        "displayChildren": boolean;
        "emitTree": boolean;
        "hideCaret": boolean;
        "isDisabled": boolean;
        "item": TreeMenuItem;
        "label": string;
        "showCheckbox": boolean;
        "showChildCount": boolean;
    }
    interface TreeList {
    }
}
declare global {
    interface HTMLMenuItemElement extends Components.MenuItem, HTMLStencilElement {
    }
    var HTMLMenuItemElement: {
        prototype: HTMLMenuItemElement;
        new (): HTMLMenuItemElement;
    };
    interface HTMLTreeListElement extends Components.TreeList, HTMLStencilElement {
    }
    var HTMLTreeListElement: {
        prototype: HTMLTreeListElement;
        new (): HTMLTreeListElement;
    };
    interface HTMLElementTagNameMap {
        "menu-item": HTMLMenuItemElement;
        "tree-list": HTMLTreeListElement;
    }
}
declare namespace LocalJSX {
    interface MenuItem {
        "compactCheckbox"?: boolean;
        "displayChildren"?: boolean;
        "emitTree"?: boolean;
        "hideCaret"?: boolean;
        "isDisabled"?: boolean;
        "item"?: TreeMenuItem;
        "label"?: string;
        "showCheckbox"?: boolean;
        "showChildCount"?: boolean;
    }
    interface TreeList {
    }
    interface IntrinsicElements {
        "menu-item": MenuItem;
        "tree-list": TreeList;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "menu-item": LocalJSX.MenuItem & JSXBase.HTMLAttributes<HTMLMenuItemElement>;
            "tree-list": LocalJSX.TreeList & JSXBase.HTMLAttributes<HTMLTreeListElement>;
        }
    }
}
